--This is how to link 2 apps (client and server)
{
  "name": "nasa-project",
  "version": "1.0.0",
  "description": "",
  "main": "test.js",
  "scripts": {
    "server": "cd server && npm run watch", 
    "client": "cd client && npm run start",
    "watch": "npm run server & npm run client",
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "keywords": [],
  "author": "",
  "license": "ISC"
}

Also run in the git: npm config set script-shell bash
The && means the first app runs until it's done and then the second starts running
The & means run the first in the background and start the second one after

------------------------------------------------------------------------------------------------

In deployment, when we use some kind of framework like React and Anglular, we need to go through some steps. For react, we run "npm run build" which serves a build folder ready for deployment. 
We find the command in package.json of the client and we change the build script to: "BUILD_PATH=../server/public react-scripts build" we do this to get the folder in our server
Afer this, our client's code is side by side with our server optimized for production and we can serve it from our API.
PS: With regular JS, you don't have to go through the steps of deployment
PS2: For deployment at the end, just add this script to the package.json in the root: "deploy": "npm run build --prefix client && npm start --prefix server". This will build and run the project in PORT 8000 (both client and API)